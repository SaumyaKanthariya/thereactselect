{"version":3,"sources":["../lib/contexts/select-context.tsx","../lib/utils.ts","../lib/components/Select.tsx"],"names":["SelectContextProvider","createContext","useSelectContext","context","useContext","SelectProvider","children","props","triggerRef","useRef","dropdownRef","searchRef","state","setState","useState","getAllOptions","useCallback","group","filterOptions","options","search","option","useEffect","allOptions","filtered","prev","open","close","toggle","setSearchValue","value","setHighlightedIndex","index","selectOption","newValues","v","deselectOption","clearSelection","highlightNext","highlightPrevious","selectAll","allValues","selectHighlighted","contextValue","React","cn","inputs","clsx","selectVariants","cva","optionVariants","SelectTrigger","forwardRef","className","ref","isOpen","selectedValues","selectProps","g","getSelectedOptions","opt","renderSelectedItems","selectedOption","selectedOptions","displayMode","maxToShow","e","X","handleClear","Loader2","ChevronDown","SelectSearch","searchValue","Search","SelectOptionComponent","showNumber","numberFormat","highlightedIndex","isSelected","isHighlighted","Check","SelectAllOption","filteredOptions","selectableOptions","allSelected","someSelected","handleSelectAll","selectAllLabel","SelectContent","showNoOptions","showSearch","groupIndex","groupOptions","globalIndex","Select","handleKeyDown","handleClickOutside","theReactSelect"],"mappings":"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","file":"index.mjs","sourcesContent":["\"use client\";\r\n\r\nimport React, { createContext, useContext, useCallback, useRef, useState, useEffect } from \"react\";\r\nimport { SelectContext, SelectProps, SelectOption, SelectState, SelectActions } from \"../types\";\r\n\r\nconst SelectContextProvider = createContext<SelectContext | null>(null);\r\n\r\nexport function useSelectContext() {\r\n  const context = useContext(SelectContextProvider);\r\n  if (!context) {\r\n    throw new Error(\"useSelectContext must be used within a SelectProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\ninterface SelectProviderProps {\r\n  children: React.ReactNode;\r\n  props: SelectProps;\r\n}\r\n\r\nexport function SelectProvider({ children, props }: SelectProviderProps) {\r\n  const triggerRef = useRef<HTMLButtonElement>(null);\r\n  const dropdownRef = useRef<HTMLDivElement>(null);\r\n  const searchRef = useRef<HTMLInputElement>(null);\r\n\r\n  const [state, setState] = useState<SelectState>({\r\n    isOpen: props.defaultOpen || false,\r\n    searchValue: \"\",\r\n    highlightedIndex: -1,\r\n    selectedValues: Array.isArray(props.defaultValue) \r\n      ? props.defaultValue \r\n      : props.defaultValue \r\n        ? [props.defaultValue] \r\n        : [],\r\n    filteredOptions: [],\r\n    loading: false,\r\n  });\r\n\r\n  // Get all available options\r\n  const getAllOptions = useCallback((): SelectOption[] => {\r\n    if (props.options) return props.options;\r\n    if (props.groups) return props.groups.flatMap(group => group.options);\r\n    return [];\r\n  }, [props.options, props.groups]);\r\n\r\n  // Filter options based on search\r\n  const filterOptions = useCallback((options: SelectOption[], search: string): SelectOption[] => {\r\n    if (!search.trim()) return options;\r\n    return options.filter(option => \r\n      option.label.toLowerCase().includes(search.toLowerCase()) ||\r\n      option.value.toString().toLowerCase().includes(search.toLowerCase())\r\n    );\r\n  }, []);\r\n\r\n  // Update filtered options when search changes\r\n  useEffect(() => {\r\n    const allOptions = getAllOptions();\r\n    const filtered = filterOptions(allOptions, state.searchValue);\r\n    setState(prev => ({ ...prev, filteredOptions: filtered }));\r\n  }, [state.searchValue, getAllOptions, filterOptions]);\r\n\r\n  // Actions\r\n  const open = useCallback(() => {\r\n    setState(prev => ({ ...prev, isOpen: true }));\r\n    props.onOpenChange?.(true);\r\n  }, [props]);\r\n\r\n  const close = useCallback(() => {\r\n    setState(prev => ({ \r\n      ...prev, \r\n      isOpen: false, \r\n      searchValue: \"\", \r\n      highlightedIndex: -1 \r\n    }));\r\n    props.onOpenChange?.(false);\r\n  }, [props]);\r\n\r\n  const toggle = useCallback(() => {\r\n    if (state.isOpen) close();\r\n    else open();\r\n  }, [state.isOpen, close, open]);\r\n\r\n  const setSearchValue = useCallback((value: string) => {\r\n    setState(prev => ({ ...prev, searchValue: value }));\r\n    props.onSearchChange?.(value);\r\n  }, [props]);\r\n\r\n  const setHighlightedIndex = useCallback((index: number) => {\r\n    setState(prev => ({ ...prev, highlightedIndex: index }));\r\n  }, []);\r\n\r\n  const selectOption = useCallback((option: SelectOption) => {\r\n    if (option.disabled) return;\r\n\r\n    if (props.multiple) {\r\n      const newValues = state.selectedValues.includes(option.value)\r\n        ? state.selectedValues.filter(v => v !== option.value)\r\n        : [...state.selectedValues, option.value];\r\n      \r\n      setState(prev => ({ ...prev, selectedValues: newValues }));\r\n      (props as any).onValueChange?.(newValues);\r\n      (props as any).onOptionSelect?.(option, !state.selectedValues.includes(option.value));\r\n    } else {\r\n      setState(prev => ({ ...prev, selectedValues: [option.value] }));\r\n      (props as any).onValueChange?.(option.value);\r\n      (props as any).onOptionSelect?.(option);\r\n      \r\n      if (props.closeOnSelect !== false) {\r\n        close();\r\n      }\r\n    }\r\n  }, [props, state.selectedValues, close]);\r\n\r\n  const deselectOption = useCallback((option: SelectOption) => {\r\n    if (props.multiple) {\r\n      const newValues = state.selectedValues.filter(v => v !== option.value);\r\n      setState(prev => ({ ...prev, selectedValues: newValues }));\r\n      (props as any).onValueChange?.(newValues);\r\n      (props as any).onOptionSelect?.(option, false);\r\n    }\r\n  }, [props, state.selectedValues]);\r\n\r\n  const clearSelection = useCallback(() => {\r\n    setState(prev => ({ ...prev, selectedValues: [] }));\r\n    if (props.multiple) {\r\n      (props as any).onValueChange?.([]);\r\n    } else {\r\n      (props as any).onValueChange?.(undefined);\r\n    }\r\n    props.onClear?.();\r\n  }, [props]);\r\n\r\n  const highlightNext = useCallback(() => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      highlightedIndex: Math.min(prev.highlightedIndex + 1, prev.filteredOptions.length - 1)\r\n    }));\r\n  }, []);\r\n\r\n  const highlightPrevious = useCallback(() => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      highlightedIndex: Math.max(prev.highlightedIndex - 1, 0)\r\n    }));\r\n  }, []);\r\n\r\n  const selectAll = useCallback(() => {\r\n    if (props.multiple) {\r\n      const allOptions = getAllOptions();\r\n      const selectableOptions = allOptions.filter(option => !option.disabled);\r\n      const allValues = selectableOptions.map(option => option.value);\r\n      \r\n      setState(prev => ({ ...prev, selectedValues: allValues }));\r\n      (props as any).onValueChange?.(allValues);\r\n      (props as any).onSelectAll?.();\r\n    }\r\n  }, [props, getAllOptions]);\r\n\r\n  const selectHighlighted = useCallback(() => {\r\n    if (state.highlightedIndex >= 0 && state.filteredOptions[state.highlightedIndex]) {\r\n      selectOption(state.filteredOptions[state.highlightedIndex]);\r\n    }\r\n  }, [state.highlightedIndex, state.filteredOptions, selectOption]);\r\n\r\n  const contextValue: SelectContext = {\r\n    ...state,\r\n    props,\r\n    triggerRef,\r\n    dropdownRef,\r\n    searchRef,\r\n    open,\r\n    close,\r\n    toggle,\r\n    setSearchValue,\r\n    setHighlightedIndex,\r\n    selectOption,\r\n    deselectOption,\r\n    clearSelection,\r\n    selectAll,\r\n    highlightNext,\r\n    highlightPrevious,\r\n    selectHighlighted,\r\n  };\r\n\r\n  return (\r\n    <SelectContextProvider.Provider value={contextValue}>\r\n      {children}\r\n    </SelectContextProvider.Provider>\r\n  );\r\n}\r\n","import { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { clsx, type ClassValue } from \"clsx\";\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return clsx(inputs);\r\n}\r\n\r\nexport const selectVariants = cva(\r\n  \"relative w-full cursor-pointer rounded-md border bg-input text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-blue-500 focus:ring-offset-1 disabled:cursor-not-allowed disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"border-border bg-background\",\r\n        outline: \"border-border bg-transparent\",\r\n        ghost: \"border-transparent bg-transparent hover:bg-accent hover:text-accent-foreground\",\r\n        filled: \"border-transparent bg-muted\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-3 py-2\",\r\n        sm: \"h-8 px-2 py-1 text-xs\",\r\n        lg: \"h-12 px-4 py-3\",\r\n        xl: \"h-14 px-5 py-4 text-lg\",\r\n      },\r\n      state: {\r\n        default: \"\",\r\n        error: \"border-destructive focus:ring-destructive\",\r\n        success: \"border-green-500 focus:ring-green-500\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n      state: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nexport const optionVariants = cva(\r\n  \"relative cursor-pointer select-none py-2 px-3 text-sm outline-none transition-colors\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"hover:bg-accent data-[highlighted]:bg-accent\",\r\n        subtle: \"hover:bg-muted data-[highlighted]:bg-muted\",\r\n      },\r\n      state: {\r\n        default: \"\",\r\n        selected: \"bg-primary text-primary-foreground data-[highlighted]:bg-primary/90\",\r\n        disabled: \"opacity-50 cursor-not-allowed\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      state: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nexport type SelectVariants = VariantProps<typeof selectVariants>;\r\nexport type OptionVariants = VariantProps<typeof optionVariants>;\r\n","\"use client\";\r\n\r\nimport React, { forwardRef, useEffect } from \"react\";\r\nimport { ChevronDown, X, Search, Check, Loader2 } from \"lucide-react\";\r\nimport { SelectProvider, useSelectContext } from \"../contexts/select-context\";\r\nimport { SelectProps, SelectOption } from \"../types\";\r\nimport { cn, selectVariants, optionVariants } from \"../utils\";\r\n\r\n// Select Trigger Component\r\nconst SelectTrigger = forwardRef<HTMLButtonElement, React.ButtonHTMLAttributes<HTMLButtonElement>>(\r\n  ({ className, children, ...props }, ref) => {\r\n    const { \r\n      isOpen, \r\n      selectedValues, \r\n      props: selectProps, \r\n      toggle, \r\n      clearSelection,\r\n      deselectOption \r\n    } = useSelectContext();\r\n\r\n    const allOptions = selectProps.options || \r\n      (selectProps.groups?.flatMap(g => g.options) || []);\r\n\r\n    const getSelectedOptions = () => {\r\n      return selectedValues.map(value => \r\n        allOptions.find(opt => opt.value === value)\r\n      ).filter(Boolean);\r\n    };\r\n\r\n    const renderSelectedItems = () => {\r\n      if (selectedValues.length === 0) {\r\n        return (\r\n          <span className=\"text-muted-foreground\">\r\n            {selectProps.placeholder || \"Select...\"}\r\n          </span>\r\n        );\r\n      }\r\n\r\n      if (!selectProps.multiple) {\r\n        const selectedOption = allOptions.find(opt => opt.value === selectedValues[0]);\r\n        return (\r\n          <span className=\"truncate\">\r\n            {selectedOption?.label || String(selectedValues[0])}\r\n          </span>\r\n        );\r\n      }\r\n\r\n      // Multi-select display modes\r\n      const selectedOptions = getSelectedOptions();\r\n      const displayMode = selectProps.selectedItemsDisplay || \"badges\";\r\n      const maxToShow = selectProps.maxSelectedItemsToShow || 3;\r\n\r\n      if (displayMode === \"count\" || selectedValues.length > maxToShow) {\r\n        return (\r\n          <span className=\"text-sm\">\r\n            {selectedValues.length} item{selectedValues.length === 1 ? '' : 's'} selected\r\n          </span>\r\n        );\r\n      }\r\n\r\n      if (displayMode === \"text\") {\r\n        return (\r\n          <span className=\"truncate\">\r\n            {selectedOptions.map(opt => opt?.label).join(\", \")}\r\n          </span>\r\n        );\r\n      }\r\n\r\n      // Default: badges\r\n      return (\r\n        <div className=\"flex flex-wrap gap-1 min-h-[1.25rem]\">\r\n          {selectedOptions.slice(0, maxToShow).map((option) => (\r\n            <div\r\n              key={option?.value}\r\n              className=\"inline-flex items-center gap-1 px-2 py-0.5 bg-primary/10 text-primary text-xs rounded border border-primary/20\"\r\n            >\r\n              <span className=\"truncate max-w-[100px]\">\r\n                {option?.label}\r\n              </span>\r\n              {selectProps.showItemClearButtons !== false && (\r\n                <div\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    if (option) deselectOption(option);\r\n                  }}\r\n                  className=\"text-primary/70 hover:text-primary ml-1 p-0.5 rounded-full hover:bg-primary/20 cursor-pointer\"\r\n                  role=\"button\"\r\n                  tabIndex={0}\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === 'Enter' || e.key === ' ') {\r\n                      e.preventDefault();\r\n                      e.stopPropagation();\r\n                      if (option) deselectOption(option);\r\n                    }\r\n                  }}\r\n                >\r\n                  <X className=\"h-3 w-3\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n          {selectedValues.length > maxToShow && (\r\n            <span className=\"text-xs text-muted-foreground px-2 py-0.5\">\r\n              +{selectedValues.length - maxToShow} more\r\n            </span>\r\n          )}\r\n        </div>\r\n      );\r\n    };\r\n\r\n    const handleClear = (e: React.MouseEvent) => {\r\n      e.stopPropagation();\r\n      clearSelection();\r\n    };\r\n\r\n    return (\r\n      <button\r\n        ref={ref}\r\n        className={cn(\r\n          selectVariants({\r\n            variant: selectProps.variant,\r\n            size: selectProps.size,\r\n            state: selectProps.error ? \"error\" : selectProps.success ? \"success\" : \"default\"\r\n          }),\r\n          \"flex items-center justify-between\",\r\n          // Auto-adjust height for multiple selections with badges\r\n          selectProps.multiple && selectProps.selectedItemsDisplay === \"badges\" && \r\n          selectedValues.length > 0 && \"min-h-[2.5rem] h-auto items-start py-2\",\r\n          selectProps.disabled && \"cursor-not-allowed opacity-50\",\r\n          className\r\n        )}\r\n        onClick={toggle}\r\n        disabled={selectProps.disabled}\r\n        aria-expanded={isOpen}\r\n        aria-haspopup=\"listbox\"\r\n        {...props}\r\n      >\r\n        <div className={cn(\r\n          \"flex-1 min-w-0 text-left\",\r\n          selectedValues.length === 0 && \"text-muted-foreground\"\r\n        )}>\r\n          {renderSelectedItems()}\r\n        </div>\r\n        \r\n        <div className=\"flex items-center gap-1\">\r\n          {selectProps.clearable && selectedValues.length > 0 && (\r\n            <div\r\n              className=\"text-muted-foreground hover:text-foreground p-0.5 rounded cursor-pointer\"\r\n              onClick={handleClear}\r\n              role=\"button\"\r\n              tabIndex={0}\r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter' || e.key === ' ') {\r\n                  e.preventDefault();\r\n                  handleClear(e as any);\r\n                }\r\n              }}\r\n              aria-label=\"Clear all selections\"\r\n            >\r\n              <X className=\"h-3 w-3\" />\r\n            </div>\r\n          )}\r\n          \r\n          {selectProps.loading ? (\r\n            <Loader2 className=\"h-4 w-4 animate-spin text-muted-foreground\" />\r\n          ) : (\r\n            <ChevronDown className={cn(\r\n              \"h-4 w-4 text-muted-foreground transition-transform duration-200\",\r\n              isOpen && \"transform rotate-180\"\r\n            )} />\r\n          )}\r\n        </div>\r\n      </button>\r\n    );\r\n  }\r\n);\r\nSelectTrigger.displayName = \"SelectTrigger\";\r\n\r\n// Select Search Component\r\nconst SelectSearch = forwardRef<HTMLInputElement, React.InputHTMLAttributes<HTMLInputElement>>(\r\n  ({ className, ...props }, ref) => {\r\n    const { searchValue, setSearchValue, props: selectProps } = useSelectContext();\r\n\r\n    return (\r\n      <div className=\"relative p-2 border-b border-border\">\r\n        <Search className=\"absolute left-4 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n        <input\r\n          ref={ref}\r\n          className={cn(\r\n            \"w-full bg-transparent pl-8 pr-2 py-1 text-sm outline-none placeholder:text-muted-foreground\",\r\n            className\r\n          )}\r\n          placeholder={selectProps.searchPlaceholder || \"Search...\"}\r\n          value={searchValue}\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n          {...props}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\nSelectSearch.displayName = \"SelectSearch\";\r\n\r\n// Select Option Component\r\ninterface SelectOptionComponentProps {\r\n  option: SelectOption;\r\n  index: number;\r\n  showNumber?: boolean;\r\n  numberFormat?: (index: number) => string;\r\n}\r\n\r\nconst SelectOptionComponent = ({ option, index, showNumber, numberFormat }: SelectOptionComponentProps) => {\r\n  const { \r\n    highlightedIndex, \r\n    selectedValues, \r\n    selectOption, \r\n    setHighlightedIndex,\r\n    props: selectProps \r\n  } = useSelectContext();\r\n\r\n  const isSelected = selectedValues.includes(option.value);\r\n  const isHighlighted = highlightedIndex === index;\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        optionVariants({\r\n          variant: \"default\",\r\n          state: option.disabled ? \"disabled\" : isSelected ? \"selected\" : \"default\"\r\n        }),\r\n        isHighlighted && \"bg-accent text-accent-foreground\",\r\n        selectProps.optionClassName\r\n      )}\r\n      onClick={() => !option.disabled && selectOption(option)}\r\n      onMouseEnter={() => setHighlightedIndex(index)}\r\n      data-highlighted={isHighlighted ? \"true\" : undefined}\r\n      data-selected={isSelected ? \"true\" : undefined}\r\n      data-disabled={option.disabled ? \"true\" : undefined}\r\n      role=\"option\"\r\n      aria-selected={isSelected}\r\n    >\r\n      <div className=\"flex items-center gap-2 text-left\">\r\n        {/* Option Number */}\r\n        {showNumber && (\r\n          <span className=\"text-xs text-muted-foreground font-mono min-w-[1.5rem] text-center\">\r\n            {numberFormat ? numberFormat(index) : `${index + 1}.`}\r\n          </span>\r\n        )}\r\n        \r\n        {/* Option Icon */}\r\n        {option.icon && <option.icon className=\"h-4 w-4 flex-shrink-0\" />}\r\n        \r\n        <div className=\"flex-1 min-w-0 text-left\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <div className=\"truncate text-left\">{option.label}</div>\r\n            \r\n            {/* Option Badge */}\r\n            {option.badge && (\r\n              <span className={cn(\r\n                \"px-1.5 py-0.5 text-xs rounded border font-medium whitespace-nowrap\",\r\n                {\r\n                  \"bg-primary/10 text-primary border-primary/20\": option.badgeVariant === \"default\" || !option.badgeVariant,\r\n                  \"bg-muted text-muted-foreground border-border\": option.badgeVariant === \"secondary\",\r\n                  \"bg-green-100 text-green-700 border-green-200 dark:bg-green-900/20 dark:text-green-400 dark:border-green-800\": option.badgeVariant === \"success\",\r\n                  \"bg-yellow-100 text-yellow-700 border-yellow-200 dark:bg-yellow-900/20 dark:text-yellow-400 dark:border-yellow-800\": option.badgeVariant === \"warning\",\r\n                  \"bg-red-100 text-red-700 border-red-200 dark:bg-red-900/20 dark:text-red-400 dark:border-red-800\": option.badgeVariant === \"error\",\r\n                  \"bg-transparent text-foreground border-border\": option.badgeVariant === \"outline\"\r\n                }\r\n              )}>\r\n                {option.badge}\r\n              </span>\r\n            )}\r\n          </div>\r\n          \r\n          {option.description && (\r\n            <div className=\"text-xs text-muted-foreground truncate text-left\">\r\n              {option.description}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {selectProps.multiple && isSelected && (\r\n          <Check className=\"h-4 w-4 flex-shrink-0\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Select All Option Component\r\nconst SelectAllOption = () => {\r\n  const { \r\n    selectedValues, \r\n    filteredOptions,\r\n    selectAll,\r\n    clearSelection,\r\n    props: selectProps \r\n  } = useSelectContext();\r\n\r\n  const allOptions = selectProps.options || \r\n    (selectProps.groups?.flatMap(g => g.options) || []);\r\n  \r\n  const selectableOptions = allOptions.filter(option => !option.disabled);\r\n  const allSelected = selectableOptions.length > 0 && \r\n    selectableOptions.every(option => selectedValues.includes(option.value));\r\n  const someSelected = selectedValues.length > 0 && !allSelected;\r\n\r\n  const handleSelectAll = () => {\r\n    if (allSelected) {\r\n      clearSelection();\r\n    } else {\r\n      selectAll();\r\n    }\r\n  };\r\n\r\n  const selectAllLabel = (selectProps as any).selectAllLabel || \"Select All\";\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={cn(\r\n          \"flex items-center justify-between px-3 py-2 text-sm cursor-pointer rounded-sm transition-colors\",\r\n          \"hover:bg-accent hover:text-accent-foreground border-b border-border mb-1\",\r\n          \"font-medium text-primary\"\r\n        )}\r\n        onClick={handleSelectAll}\r\n        role=\"option\"\r\n        aria-selected={allSelected}\r\n      >\r\n        <div className=\"flex items-center gap-2\">\r\n          <div className={cn(\r\n            \"w-4 h-4 border border-primary rounded flex items-center justify-center\",\r\n            allSelected && \"bg-primary text-primary-foreground\",\r\n            someSelected && \"bg-primary/20\"\r\n          )}>\r\n            {allSelected && <Check className=\"h-3 w-3\" />}\r\n            {someSelected && <div className=\"w-2 h-2 bg-primary rounded-sm\" />}\r\n          </div>\r\n          <span>{selectAllLabel}</span>\r\n        </div>\r\n        <span className=\"text-xs text-muted-foreground\">\r\n          {selectedValues.length}/{selectableOptions.length}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// Select Content Component\r\nconst SelectContent = forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\r\n  ({ className, ...props }, ref) => {\r\n    const { \r\n      isOpen, \r\n      filteredOptions, \r\n      searchValue,\r\n      props: selectProps \r\n    } = useSelectContext();\r\n\r\n    if (!isOpen) return null;\r\n\r\n    const showNoOptions = filteredOptions.length === 0;\r\n    const showSearch = selectProps.searchable;\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          \"absolute z-50 w-full mt-1 bg-background border border-border rounded-md shadow-lg\",\r\n          \"animate-in fade-in-0 zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=top]:slide-in-from-bottom-2\",\r\n          selectProps.dropdownClassName,\r\n          className\r\n        )}\r\n        style={{ maxHeight: selectProps.maxHeight || 300 }}\r\n        role=\"listbox\"\r\n        {...props}\r\n      >\r\n        {showSearch && <SelectSearch />}\r\n        \r\n        <div className=\"max-h-60 overflow-y-auto p-1\">\r\n          {showNoOptions ? (\r\n            <div className=\"px-3 py-6 text-center text-sm text-muted-foreground\">\r\n              {searchValue ? \r\n                (selectProps.noSearchResultsMessage || \"No results found\") :\r\n                (selectProps.noOptionsMessage || \"No options available\")\r\n              }\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* Select All Option for Multi-Select */}\r\n              {selectProps.multiple && (selectProps as any).selectAll && !searchValue && (\r\n                <SelectAllOption />\r\n              )}\r\n              \r\n              {selectProps.groups ? (\r\n                // Render grouped options\r\n                selectProps.groups.map((group, groupIndex) => {\r\n                  const groupOptions = group.options.filter(option => \r\n                    filteredOptions.some(filtered => filtered.value === option.value)\r\n                  );\r\n                  \r\n                  if (groupOptions.length === 0) return null;\r\n                  \r\n                  return (\r\n                    <div key={group.label}>\r\n                      {selectProps.showGroupHeaders !== false && (\r\n                        <div className=\"px-3 py-2 text-xs font-medium text-muted-foreground uppercase tracking-wider border-b border-border\">\r\n                          {group.label}\r\n                        </div>\r\n                      )}\r\n                      {groupOptions.map((option) => {\r\n                        const globalIndex = filteredOptions.findIndex(filtered => filtered.value === option.value);\r\n                        return (\r\n                          <div key={`${option.value}-${globalIndex}`} className=\"pl-4\">\r\n                            <SelectOptionComponent \r\n                              option={option} \r\n                              index={globalIndex}\r\n                              showNumber={selectProps.numbered}\r\n                              numberFormat={selectProps.numberFormat}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })}\r\n                      {selectProps.groupDividers && groupIndex < (selectProps.groups?.length || 0) - 1 && (\r\n                        <div className=\"border-b border-border my-1\" />\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                // Render flat options\r\n                filteredOptions.map((option, index) => (\r\n                  <SelectOptionComponent \r\n                    key={`${option.value}-${index}`} \r\n                    option={option} \r\n                    index={index}\r\n                    showNumber={selectProps.numbered}\r\n                    numberFormat={selectProps.numberFormat}\r\n                  />\r\n                ))\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\nSelectContent.displayName = \"SelectContent\";\r\n\r\n// Main Select Component\r\nexport const Select = forwardRef<HTMLDivElement, SelectProps & React.HTMLAttributes<HTMLDivElement>>(\r\n  ({ className, ...props }, ref) => {\r\n    const { \r\n      triggerRef, \r\n      dropdownRef, \r\n      isOpen, \r\n      close, \r\n      highlightNext, \r\n      highlightPrevious, \r\n      selectHighlighted \r\n    } = useSelectContext();\r\n\r\n    // Keyboard navigation\r\n    useEffect(() => {\r\n      const handleKeyDown = (e: KeyboardEvent) => {\r\n        if (!isOpen) return;\r\n\r\n        switch (e.key) {\r\n          case \"ArrowDown\":\r\n            e.preventDefault();\r\n            highlightNext();\r\n            break;\r\n          case \"ArrowUp\":\r\n            e.preventDefault();\r\n            highlightPrevious();\r\n            break;\r\n          case \"Enter\":\r\n            e.preventDefault();\r\n            selectHighlighted();\r\n            break;\r\n          case \"Escape\":\r\n            e.preventDefault();\r\n            close();\r\n            break;\r\n        }\r\n      };\r\n\r\n      if (isOpen) {\r\n        document.addEventListener(\"keydown\", handleKeyDown);\r\n        return () => document.removeEventListener(\"keydown\", handleKeyDown);\r\n      }\r\n    }, [isOpen, highlightNext, highlightPrevious, selectHighlighted, close]);\r\n\r\n    // Click outside to close\r\n    useEffect(() => {\r\n      const handleClickOutside = (e: MouseEvent) => {\r\n        if (\r\n          isOpen &&\r\n          triggerRef.current &&\r\n          dropdownRef.current &&\r\n          !triggerRef.current.contains(e.target as Node) &&\r\n          !dropdownRef.current.contains(e.target as Node)\r\n        ) {\r\n          close();\r\n        }\r\n      };\r\n\r\n      if (isOpen) {\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      }\r\n    }, [isOpen, close, triggerRef, dropdownRef]);\r\n\r\n    return (\r\n      <div ref={ref} className={cn(\"relative w-full\", className)}>\r\n        <SelectTrigger ref={triggerRef} />\r\n        <SelectContent ref={dropdownRef} />\r\n      </div>\r\n    );\r\n  }\r\n);\r\nSelect.displayName = \"Select\";\r\n\r\n// Main Export with Provider\r\nexport const theReactSelect = forwardRef<HTMLDivElement, SelectProps & React.HTMLAttributes<HTMLDivElement>>(\r\n  (props, ref) => {\r\n    return (\r\n      <SelectProvider props={props}>\r\n        <Select ref={ref} {...props} />\r\n      </SelectProvider>\r\n    );\r\n  }\r\n);\r\ntheReactSelect.displayName = \"theReactSelect\";\r\n"]}